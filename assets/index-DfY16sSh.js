const Me=["white","black"],Qt=["a","b","c","d","e","f","g","h"],At=["1","2","3","4","5","6","7","8"],Te=[...At].reverse(),Ot=Array.prototype.concat(...Qt.map(s=>At.map(t=>s+t))),ze=s=>Ot[8*s[0]+s[1]],xt=s=>[s.charCodeAt(0)-97,s.charCodeAt(1)-49],Ie=s=>{if(s)return s[1]==="@"?[s.slice(2,4)]:[s.slice(0,2),s.slice(2,4)]},Ke=Ot.map(xt);function Ue(s){let t;const e=()=>(t===void 0&&(t=s()),t);return e.clear=()=>{t=void 0},e}const Ge=()=>{let s;return{start(){s=performance.now()},cancel(){s=void 0},stop(){if(!s)return 0;const t=performance.now()-s;return s=void 0,t}}},De=s=>s==="white"?"black":"white",Fe=(s,t)=>{const e=s[0]-t[0],n=s[1]-t[1];return e*e+n*n},Le=(s,t)=>s.role===t.role&&s.color===t.color,Ve=s=>(t,e)=>[(e?t[0]:7-t[0])*s.width/8,(e?7-t[1]:t[1])*s.height/8],_e=(s,t)=>{s.style.transform=`translate(${t[0]}px,${t[1]}px)`},qe=(s,t,e=1)=>{s.style.transform=`translate(${t[0]}px,${t[1]}px) scale(${e})`},Qe=(s,t)=>{s.style.visibility=t?"visible":"hidden"},$e=s=>{var t;if(s.clientX||s.clientX===0)return[s.clientX,s.clientY];if(!((t=s.targetTouches)===null||t===void 0)&&t[0])return[s.targetTouches[0].clientX,s.targetTouches[0].clientY]},He=s=>s.button===2,We=(s,t)=>{const e=document.createElement(s);return t&&(e.className=t),e};function je(s,t,e){const n=xt(s);return t||(n[0]=7-n[0],n[1]=7-n[1]),[e.left+e.width*n[0]/8+e.width/16,e.top+e.height*(7-n[1])/8+e.height/16]}const H=["a","b","c","d","e","f","g","h"],vt=["1","2","3","4","5","6","7","8"],v=["white","black"],x=["pawn","knight","bishop","rook","queen","king"],$t=["a","h"],F=s=>"role"in s,l=s=>s!==void 0,p=s=>s==="white"?"black":"white",z=s=>s>>3,C=s=>s&7,et=(s,t)=>0<=s&&s<8&&0<=t&&t<8?s+8*t:void 0,M=s=>{switch(s){case"pawn":return"p";case"knight":return"n";case"bishop":return"b";case"rook":return"r";case"queen":return"q";case"king":return"k"}};function $(s){switch(s.toLowerCase()){case"p":return"pawn";case"n":return"knight";case"b":return"bishop";case"r":return"rook";case"q":return"queen";case"k":return"king";default:return}}function Q(s){if(s.length===2)return et(s.charCodeAt(0)-97,s.charCodeAt(1)-49)}const D=s=>H[C(s)]+vt[z(s)],Ht=s=>F(s)?`${M(s.role).toUpperCase()}@${D(s.to)}`:D(s.from)+D(s.to)+(s.promotion?M(s.promotion):""),ht=(s,t)=>s==="white"?t==="a"?2:6:t==="a"?58:62,ut=(s,t)=>s==="white"?t==="a"?3:5:t==="a"?59:61,wt=s=>(s=s-(s>>>1&1431655765),s=(s&858993459)+(s>>>2&858993459),Math.imul(s+(s>>>4)&252645135,16843009)>>24),st=s=>(s=s>>>8&16711935|(s&16711935)<<8,s>>>16&65535|(s&65535)<<16),gt=s=>(s=s>>>1&1431655765|(s&1431655765)<<1,s=s>>>2&858993459|(s&858993459)<<2,s=s>>>4&252645135|(s&252645135)<<4,st(s));class r{constructor(t,e){this.lo=t|0,this.hi=e|0}static fromSquare(t){return t>=32?new r(0,1<<t-32):new r(1<<t,0)}static fromRank(t){return new r(255,0).shl64(8*t)}static fromFile(t){return new r(16843009<<t,16843009<<t)}static empty(){return new r(0,0)}static full(){return new r(4294967295,4294967295)}static corners(){return new r(129,2164260864)}static center(){return new r(402653184,24)}static backranks(){return new r(255,4278190080)}static backrank(t){return t==="white"?new r(255,0):new r(0,4278190080)}static lightSquares(){return new r(1437226410,1437226410)}static darkSquares(){return new r(2857740885,2857740885)}complement(){return new r(~this.lo,~this.hi)}xor(t){return new r(this.lo^t.lo,this.hi^t.hi)}union(t){return new r(this.lo|t.lo,this.hi|t.hi)}intersect(t){return new r(this.lo&t.lo,this.hi&t.hi)}diff(t){return new r(this.lo&~t.lo,this.hi&~t.hi)}intersects(t){return this.intersect(t).nonEmpty()}isDisjoint(t){return this.intersect(t).isEmpty()}supersetOf(t){return t.diff(this).isEmpty()}subsetOf(t){return this.diff(t).isEmpty()}shr64(t){return t>=64?r.empty():t>=32?new r(this.hi>>>t-32,0):t>0?new r(this.lo>>>t^this.hi<<32-t,this.hi>>>t):this}shl64(t){return t>=64?r.empty():t>=32?new r(0,this.lo<<t-32):t>0?new r(this.lo<<t,this.hi<<t^this.lo>>>32-t):this}bswap64(){return new r(st(this.hi),st(this.lo))}rbit64(){return new r(gt(this.hi),gt(this.lo))}minus64(t){const e=this.lo-t.lo,n=(e&t.lo&1)+(t.lo>>>1)+(e>>>1)>>>31;return new r(e,this.hi-(t.hi+n))}equals(t){return this.lo===t.lo&&this.hi===t.hi}size(){return wt(this.lo)+wt(this.hi)}isEmpty(){return this.lo===0&&this.hi===0}nonEmpty(){return this.lo!==0||this.hi!==0}has(t){return(t>=32?this.hi&1<<t-32:this.lo&1<<t)!==0}set(t,e){return e?this.with(t):this.without(t)}with(t){return t>=32?new r(this.lo,this.hi|1<<t-32):new r(this.lo|1<<t,this.hi)}without(t){return t>=32?new r(this.lo,this.hi&~(1<<t-32)):new r(this.lo&~(1<<t),this.hi)}toggle(t){return t>=32?new r(this.lo,this.hi^1<<t-32):new r(this.lo^1<<t,this.hi)}last(){if(this.hi!==0)return 63-Math.clz32(this.hi);if(this.lo!==0)return 31-Math.clz32(this.lo)}first(){if(this.lo!==0)return 31-Math.clz32(this.lo&-this.lo);if(this.hi!==0)return 63-Math.clz32(this.hi&-this.hi)}withoutFirst(){return this.lo!==0?new r(this.lo&this.lo-1,this.hi):new r(0,this.hi&this.hi-1)}moreThanOne(){return this.hi!==0&&this.lo!==0||(this.lo&this.lo-1)!==0||(this.hi&this.hi-1)!==0}singleSquare(){return this.moreThanOne()?void 0:this.last()}*[Symbol.iterator](){let t=this.lo,e=this.hi;for(;t!==0;){const n=31-Math.clz32(t&-t);t^=1<<n,yield n}for(;e!==0;){const n=31-Math.clz32(e&-e);e^=1<<n,yield 32+n}}*reversed(){let t=this.lo,e=this.hi;for(;e!==0;){const n=31-Math.clz32(e);e^=1<<n,yield 32+n}for(;t!==0;){const n=31-Math.clz32(t);t^=1<<n,yield n}}}const W=(s,t)=>{let e=r.empty();for(const n of t){const i=s+n;0<=i&&i<64&&Math.abs(C(s)-C(i))<=2&&(e=e.with(i))}return e},N=s=>{const t=[];for(let e=0;e<64;e++)t[e]=s(e);return t},Wt=N(s=>W(s,[-9,-8,-7,-1,1,7,8,9])),jt=N(s=>W(s,[-17,-15,-10,-6,6,10,15,17])),Yt={white:N(s=>W(s,[7,9])),black:N(s=>W(s,[-7,-9]))},I=s=>Wt[s],Y=s=>jt[s],q=(s,t)=>Yt[s][t],nt=N(s=>r.fromFile(C(s)).without(s)),it=N(s=>r.fromRank(z(s)).without(s)),rt=N(s=>{const t=new r(134480385,2151686160),e=8*(z(s)-C(s));return(e>=0?t.shl64(e):t.shr64(-e)).without(s)}),ot=N(s=>{const t=new r(270549120,16909320),e=8*(z(s)+C(s)-7);return(e>=0?t.shl64(e):t.shr64(-e)).without(s)}),at=(s,t,e)=>{let n=e.intersect(t),i=n.bswap64();return n=n.minus64(s),i=i.minus64(s.bswap64()),n.xor(i.bswap64()).intersect(t)},Xt=(s,t)=>at(r.fromSquare(s),nt[s],t),Zt=(s,t)=>{const e=it[s];let n=t.intersect(e),i=n.rbit64();return n=n.minus64(r.fromSquare(s)),i=i.minus64(r.fromSquare(63-s)),n.xor(i.rbit64()).intersect(e)},L=(s,t)=>{const e=r.fromSquare(s);return at(e,rt[s],t).xor(at(e,ot[s],t))},V=(s,t)=>Xt(s,t).xor(Zt(s,t)),lt=(s,t)=>L(s,t).xor(V(s,t)),St=(s,t,e)=>{switch(s.role){case"pawn":return q(s.color,t);case"knight":return Y(t);case"bishop":return L(t,e);case"rook":return V(t,e);case"queen":return lt(t,e);case"king":return I(t)}},Bt=(s,t)=>{const e=r.fromSquare(t);return it[s].intersects(e)?it[s].with(s):ot[s].intersects(e)?ot[s].with(s):rt[s].intersects(e)?rt[s].with(s):nt[s].intersects(e)?nt[s].with(s):r.empty()},_=(s,t)=>Bt(s,t).intersect(r.full().shl64(s).xor(r.full().shl64(t))).withoutFirst();class B{constructor(){}static default(){const t=new B;return t.reset(),t}reset(){this.occupied=new r(65535,4294901760),this.promoted=r.empty(),this.white=new r(65535,0),this.black=new r(0,4294901760),this.pawn=new r(65280,16711680),this.knight=new r(66,1107296256),this.bishop=new r(36,603979776),this.rook=new r(129,2164260864),this.queen=new r(8,134217728),this.king=new r(16,268435456)}static empty(){const t=new B;return t.clear(),t}clear(){this.occupied=r.empty(),this.promoted=r.empty();for(const t of v)this[t]=r.empty();for(const t of x)this[t]=r.empty()}clone(){const t=new B;t.occupied=this.occupied,t.promoted=this.promoted;for(const e of v)t[e]=this[e];for(const e of x)t[e]=this[e];return t}getColor(t){if(this.white.has(t))return"white";if(this.black.has(t))return"black"}getRole(t){for(const e of x)if(this[e].has(t))return e}get(t){const e=this.getColor(t);if(!e)return;const n=this.getRole(t),i=this.promoted.has(t);return{color:e,role:n,promoted:i}}take(t){const e=this.get(t);return e&&(this.occupied=this.occupied.without(t),this[e.color]=this[e.color].without(t),this[e.role]=this[e.role].without(t),e.promoted&&(this.promoted=this.promoted.without(t))),e}set(t,e){const n=this.take(t);return this.occupied=this.occupied.with(t),this[e.color]=this[e.color].with(t),this[e.role]=this[e.role].with(t),e.promoted&&(this.promoted=this.promoted.with(t)),n}has(t){return this.occupied.has(t)}*[Symbol.iterator](){for(const t of this.occupied)yield[t,this.get(t)]}pieces(t,e){return this[t].intersect(this[e])}rooksAndQueens(){return this.rook.union(this.queen)}bishopsAndQueens(){return this.bishop.union(this.queen)}kingOf(t){return this.pieces(t,"king").singleSquare()}}class A{constructor(){}static empty(){const t=new A;for(const e of x)t[e]=0;return t}static fromBoard(t,e){const n=new A;for(const i of x)n[i]=t.pieces(e,i).size();return n}clone(){const t=new A;for(const e of x)t[e]=this[e];return t}equals(t){return x.every(e=>this[e]===t[e])}add(t){const e=new A;for(const n of x)e[n]=this[n]+t[n];return e}subtract(t){const e=new A;for(const n of x)e[n]=this[n]-t[n];return e}nonEmpty(){return x.some(t=>this[t]>0)}isEmpty(){return!this.nonEmpty()}hasPawns(){return this.pawn>0}hasNonPawns(){return this.knight>0||this.bishop>0||this.rook>0||this.queen>0||this.king>0}size(){return this.pawn+this.knight+this.bishop+this.rook+this.queen+this.king}}class S{constructor(t,e){this.white=t,this.black=e}static empty(){return new S(A.empty(),A.empty())}static fromBoard(t){return new S(A.fromBoard(t,"white"),A.fromBoard(t,"black"))}clone(){return new S(this.white.clone(),this.black.clone())}equals(t){return this.white.equals(t.white)&&this.black.equals(t.black)}add(t){return new S(this.white.add(t.white),this.black.add(t.black))}subtract(t){return new S(this.white.subtract(t.white),this.black.subtract(t.black))}count(t){return this.white[t]+this.black[t]}size(){return this.white.size()+this.black.size()}isEmpty(){return this.white.isEmpty()&&this.black.isEmpty()}nonEmpty(){return!this.isEmpty()}hasPawns(){return this.white.hasPawns()||this.black.hasPawns()}hasNonPawns(){return this.white.hasNonPawns()||this.black.hasNonPawns()}}class K{constructor(t,e){this.white=t,this.black=e}static default(){return new K(3,3)}clone(){return new K(this.white,this.black)}equals(t){return this.white===t.white&&this.black===t.black}}class Nt{unwrap(t,e){const n=this._chain(i=>u.ok(t?t(i):i),i=>e?u.ok(e(i)):u.err(i));if(n.isErr)throw n.error;return n.value}map(t,e){return this._chain(n=>u.ok(t(n)),n=>u.err(e?e(n):n))}chain(t,e){return this._chain(t,e||(n=>u.err(n)))}}class Jt extends Nt{constructor(t){super(),this.value=void 0,this.isOk=!0,this.isErr=!1,this.value=t}_chain(t,e){return t(this.value)}}class te extends Nt{constructor(t){super(),this.error=void 0,this.isOk=!1,this.isErr=!0,this.error=t}_chain(t,e){return e(this.error)}}var u;(function(s){s.ok=function(t){return new Jt(t)},s.err=function(t){return new te(t||new Error)},s.all=function(t){if(Array.isArray(t)){const i=[];for(let o=0;o<t.length;o++){const a=t[o];if(a.isErr)return a;i.push(a.value)}return s.ok(i)}const e={},n=Object.keys(t);for(let i=0;i<n.length;i++){const o=t[n[i]];if(o.isErr)return o;e[n[i]]=o.value}return s.ok(e)}})(u||(u={}));var m;(function(s){s.Empty="ERR_EMPTY",s.OppositeCheck="ERR_OPPOSITE_CHECK",s.PawnsOnBackrank="ERR_PAWNS_ON_BACKRANK",s.Kings="ERR_KINGS",s.Variant="ERR_VARIANT"})(m||(m={}));class w extends Error{}const ee=(s,t,e,n)=>e[t].intersect(V(s,n).intersect(e.rooksAndQueens()).union(L(s,n).intersect(e.bishopsAndQueens())).union(Y(s).intersect(e.knight)).union(I(s).intersect(e.king)).union(q(p(t),s).intersect(e.pawn)));class O{constructor(){}static default(){const t=new O;return t.castlingRights=r.corners(),t.rook={white:{a:0,h:7},black:{a:56,h:63}},t.path={white:{a:new r(14,0),h:new r(96,0)},black:{a:new r(0,234881024),h:new r(0,1610612736)}},t}static empty(){const t=new O;return t.castlingRights=r.empty(),t.rook={white:{a:void 0,h:void 0},black:{a:void 0,h:void 0}},t.path={white:{a:r.empty(),h:r.empty()},black:{a:r.empty(),h:r.empty()}},t}clone(){const t=new O;return t.castlingRights=this.castlingRights,t.rook={white:{a:this.rook.white.a,h:this.rook.white.h},black:{a:this.rook.black.a,h:this.rook.black.h}},t.path={white:{a:this.path.white.a,h:this.path.white.h},black:{a:this.path.black.a,h:this.path.black.h}},t}add(t,e,n,i){const o=ht(t,e),a=ut(t,e);this.castlingRights=this.castlingRights.with(i),this.rook[t][e]=i,this.path[t][e]=_(i,a).with(a).union(_(n,o).with(o)).without(n).without(i)}static fromSetup(t){const e=O.empty(),n=t.castlingRights.intersect(t.board.rook);for(const i of v){const o=r.backrank(i),a=t.board.kingOf(i);if(!l(a)||!o.has(a))continue;const c=n.intersect(t.board[i]).intersect(o),f=c.first();l(f)&&f<a&&e.add(i,"a",a,f);const h=c.last();l(h)&&a<h&&e.add(i,"h",a,h)}return e}discardRook(t){if(this.castlingRights.has(t)){this.castlingRights=this.castlingRights.without(t);for(const e of v)for(const n of $t)this.rook[e][n]===t&&(this.rook[e][n]=void 0)}}discardColor(t){this.castlingRights=this.castlingRights.diff(r.backrank(t)),this.rook[t].a=void 0,this.rook[t].h=void 0}}class P{constructor(t){this.rules=t}reset(){this.board=B.default(),this.pockets=void 0,this.turn="white",this.castles=O.default(),this.epSquare=void 0,this.remainingChecks=void 0,this.halfmoves=0,this.fullmoves=1}setupUnchecked(t){this.board=t.board.clone(),this.board.promoted=r.empty(),this.pockets=void 0,this.turn=t.turn,this.castles=O.fromSetup(t),this.epSquare=se(this,t.epSquare),this.remainingChecks=void 0,this.halfmoves=t.halfmoves,this.fullmoves=t.fullmoves}kingAttackers(t,e,n){return ee(t,e,this.board,n)}playCaptureAt(t,e){this.halfmoves=0,e.role==="rook"&&this.castles.discardRook(t),this.pockets&&this.pockets[p(e.color)][e.promoted?"pawn":e.role]++}ctx(){const t=this.isVariantEnd(),e=this.board.kingOf(this.turn);if(!l(e))return{king:e,blockers:r.empty(),checkers:r.empty(),variantEnd:t,mustCapture:!1};const n=V(e,r.empty()).intersect(this.board.rooksAndQueens()).union(L(e,r.empty()).intersect(this.board.bishopsAndQueens())).intersect(this.board[p(this.turn)]);let i=r.empty();for(const a of n){const c=_(e,a).intersect(this.board.occupied);c.moreThanOne()||(i=i.union(c))}const o=this.kingAttackers(e,p(this.turn),this.board.occupied);return{king:e,blockers:i,checkers:o,variantEnd:t,mustCapture:!1}}clone(){var t,e;const n=new this.constructor;return n.board=this.board.clone(),n.pockets=(t=this.pockets)===null||t===void 0?void 0:t.clone(),n.turn=this.turn,n.castles=this.castles.clone(),n.epSquare=this.epSquare,n.remainingChecks=(e=this.remainingChecks)===null||e===void 0?void 0:e.clone(),n.halfmoves=this.halfmoves,n.fullmoves=this.fullmoves,n}validate(){if(this.board.occupied.isEmpty())return u.err(new w(m.Empty));if(this.board.king.size()!==2)return u.err(new w(m.Kings));if(!l(this.board.kingOf(this.turn)))return u.err(new w(m.Kings));const t=this.board.kingOf(p(this.turn));return l(t)?this.kingAttackers(t,this.turn,this.board.occupied).nonEmpty()?u.err(new w(m.OppositeCheck)):r.backranks().intersects(this.board.pawn)?u.err(new w(m.PawnsOnBackrank)):u.ok(void 0):u.err(new w(m.Kings))}dropDests(t){return r.empty()}dests(t,e){if(e=e||this.ctx(),e.variantEnd)return r.empty();const n=this.board.get(t);if(!n||n.color!==this.turn)return r.empty();let i,o;if(n.role==="pawn"){i=q(this.turn,t).intersect(this.board[p(this.turn)]);const a=this.turn==="white"?8:-8,c=t+a;if(0<=c&&c<64&&!this.board.occupied.has(c)){i=i.with(c);const f=this.turn==="white"?t<16:t>=48,h=c+a;f&&!this.board.occupied.has(h)&&(i=i.with(h))}l(this.epSquare)&&ie(this,t,e)&&(o=r.fromSquare(this.epSquare))}else n.role==="bishop"?i=L(t,this.board.occupied):n.role==="knight"?i=Y(t):n.role==="rook"?i=V(t,this.board.occupied):n.role==="queen"?i=lt(t,this.board.occupied):i=I(t);if(i=i.diff(this.board[this.turn]),l(e.king)){if(n.role==="king"){const a=this.board.occupied.without(t);for(const c of i)this.kingAttackers(c,p(this.turn),a).nonEmpty()&&(i=i.without(c));return i.union(j(this,"a",e)).union(j(this,"h",e))}if(e.checkers.nonEmpty()){const a=e.checkers.singleSquare();if(!l(a))return r.empty();i=i.intersect(_(a,e.king).with(a))}e.blockers.has(t)&&(i=i.intersect(Bt(t,e.king)))}return o&&(i=i.union(o)),i}isVariantEnd(){return!1}variantOutcome(t){}hasInsufficientMaterial(t){return this.board[t].intersect(this.board.pawn.union(this.board.rooksAndQueens())).nonEmpty()?!1:this.board[t].intersects(this.board.knight)?this.board[t].size()<=2&&this.board[p(t)].diff(this.board.king).diff(this.board.queen).isEmpty():this.board[t].intersects(this.board.bishop)?(!this.board.bishop.intersects(r.darkSquares())||!this.board.bishop.intersects(r.lightSquares()))&&this.board.pawn.isEmpty()&&this.board.knight.isEmpty():!0}toSetup(){var t,e;return{board:this.board.clone(),pockets:(t=this.pockets)===null||t===void 0?void 0:t.clone(),turn:this.turn,castlingRights:this.castles.castlingRights,epSquare:ne(this),remainingChecks:(e=this.remainingChecks)===null||e===void 0?void 0:e.clone(),halfmoves:Math.min(this.halfmoves,150),fullmoves:Math.min(Math.max(this.fullmoves,1),9999)}}isInsufficientMaterial(){return v.every(t=>this.hasInsufficientMaterial(t))}hasDests(t){t=t||this.ctx();for(const e of this.board[this.turn])if(this.dests(e,t).nonEmpty())return!0;return this.dropDests(t).nonEmpty()}isLegal(t,e){if(F(t))return!this.pockets||this.pockets[this.turn][t.role]<=0||t.role==="pawn"&&r.backranks().has(t.to)?!1:this.dropDests(e).has(t.to);{if(t.promotion==="pawn"||t.promotion==="king"&&this.rules!=="antichess"||!!t.promotion!==(this.board.pawn.has(t.from)&&r.backranks().has(t.to)))return!1;const n=this.dests(t.from,e);return n.has(t.to)||n.has(re(this,t).to)}}isCheck(){const t=this.board.kingOf(this.turn);return l(t)&&this.kingAttackers(t,p(this.turn),this.board.occupied).nonEmpty()}isEnd(t){return(t?t.variantEnd:this.isVariantEnd())?!0:this.isInsufficientMaterial()||!this.hasDests(t)}isCheckmate(t){return t=t||this.ctx(),!t.variantEnd&&t.checkers.nonEmpty()&&!this.hasDests(t)}isStalemate(t){return t=t||this.ctx(),!t.variantEnd&&t.checkers.isEmpty()&&!this.hasDests(t)}outcome(t){const e=this.variantOutcome(t);return e||(t=t||this.ctx(),this.isCheckmate(t)?{winner:p(this.turn)}:this.isInsufficientMaterial()||this.isStalemate(t)?{winner:void 0}:void 0)}allDests(t){t=t||this.ctx();const e=new Map;if(t.variantEnd)return e;for(const n of this.board[this.turn])e.set(n,this.dests(n,t));return e}play(t){const e=this.turn,n=this.epSquare,i=Mt(this,t);if(this.epSquare=void 0,this.halfmoves+=1,e==="black"&&(this.fullmoves+=1),this.turn=p(e),F(t))this.board.set(t.to,{role:t.role,color:e}),this.pockets&&this.pockets[e][t.role]--,t.role==="pawn"&&(this.halfmoves=0);else{const o=this.board.take(t.from);if(!o)return;let a;if(o.role==="pawn"){this.halfmoves=0,t.to===n&&(a=this.board.take(t.to+(e==="white"?-8:8)));const c=t.from-t.to;Math.abs(c)===16&&8<=t.from&&t.from<=55&&(this.epSquare=t.from+t.to>>1),t.promotion&&(o.role=t.promotion,o.promoted=!!this.pockets)}else if(o.role==="rook")this.castles.discardRook(t.from);else if(o.role==="king"){if(i){const c=this.castles.rook[e][i];if(l(c)){const f=this.board.take(c);this.board.set(ht(e,i),o),f&&this.board.set(ut(e,i),f)}}this.castles.discardColor(e)}if(!i){const c=this.board.set(t.to,o)||a;c&&this.playCaptureAt(t.to,c)}}this.remainingChecks&&this.isCheck()&&(this.remainingChecks[e]=Math.max(this.remainingChecks[e]-1,0))}}class Pt extends P{constructor(){super("chess")}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}}const se=(s,t)=>{if(!l(t))return;const e=s.turn==="white"?5:2,n=s.turn==="white"?8:-8;if(z(t)!==e||s.board.occupied.has(t+n))return;const i=t-n;if(!(!s.board.pawn.has(i)||!s.board[p(s.turn)].has(i)))return t},ne=s=>{if(!l(s.epSquare))return;const t=s.ctx(),n=s.board.pieces(s.turn,"pawn").intersect(q(p(s.turn),s.epSquare));for(const i of n)if(s.dests(i,t).has(s.epSquare))return s.epSquare},ie=(s,t,e)=>{if(!l(s.epSquare)||!q(s.turn,t).has(s.epSquare))return!1;if(!l(e.king))return!0;const n=s.turn==="white"?8:-8,i=s.epSquare-n;return s.kingAttackers(e.king,p(s.turn),s.board.occupied.toggle(t).toggle(i).with(s.epSquare)).without(i).isEmpty()},j=(s,t,e)=>{if(!l(e.king)||e.checkers.nonEmpty())return r.empty();const n=s.castles.rook[s.turn][t];if(!l(n)||s.castles.path[s.turn][t].intersects(s.board.occupied))return r.empty();const i=ht(s.turn,t),o=_(e.king,i),a=s.board.occupied.without(e.king);for(const h of o)if(s.kingAttackers(h,p(s.turn),a).nonEmpty())return r.empty();const c=ut(s.turn,t),f=s.board.occupied.toggle(e.king).toggle(n).toggle(c);return s.kingAttackers(i,p(s.turn),f).nonEmpty()?r.empty():r.fromSquare(n)},ct=(s,t,e)=>{if(e.variantEnd)return r.empty();const n=s.board.get(t);if(!n||n.color!==s.turn)return r.empty();let i=St(n,t,s.board.occupied);if(n.role==="pawn"){let o=s.board[p(s.turn)];l(s.epSquare)&&(o=o.with(s.epSquare)),i=i.intersect(o);const a=s.turn==="white"?8:-8,c=t+a;if(0<=c&&c<64&&!s.board.occupied.has(c)){i=i.with(c);const f=s.turn==="white"?t<16:t>=48,h=c+a;f&&!s.board.occupied.has(h)&&(i=i.with(h))}return i}else i=i.diff(s.board[s.turn]);return t===e.king?i.union(j(s,"a",e)).union(j(s,"h",e)):i},Mt=(s,t)=>{if(F(t))return;const e=t.to-t.from;if(!(Math.abs(e)!==2&&!s.board[s.turn].has(t.to))&&s.board.king.has(t.from))return e>0?"h":"a"},re=(s,t)=>{const e=Mt(s,t);if(!e)return t;const n=s.castles.rook[s.turn][e];return{from:t.from,to:l(n)?n:t.to}},oe=s=>F(s)?String.fromCharCode(35+s.to,99+8*5+["queen","rook","bishop","knight","pawn"].indexOf(s.role)):String.fromCharCode(35+s.from,s.promotion?99+8*["queen","rook","bishop","knight","king"].indexOf(s.promotion)+C(s.to):35+s.to);var b;(function(s){s.Fen="ERR_FEN",s.Board="ERR_BOARD",s.Pockets="ERR_POCKETS",s.Turn="ERR_TURN",s.Castling="ERR_CASTLING",s.EpSquare="ERR_EP_SQUARE",s.RemainingChecks="ERR_REMAINING_CHECKS",s.Halfmoves="ERR_HALFMOVES",s.Fullmoves="ERR_FULLMOVES"})(b||(b={}));class y extends Error{}const ae=(s,t,e)=>{let n=s.indexOf(t);for(;e-- >0&&n!==-1;)n=s.indexOf(t,n+t.length);return n},G=s=>/^\d{1,4}$/.test(s)?parseInt(s,10):void 0,Tt=s=>{const t=$(s);return t&&{role:t,color:s.toLowerCase()===s?"black":"white"}},Z=s=>{const t=B.empty();let e=7,n=0;for(let i=0;i<s.length;i++){const o=s[i];if(o==="/"&&n===8)n=0,e--;else{const a=parseInt(o,10);if(a>0)n+=a;else{if(n>=8||e<0)return u.err(new y(b.Board));const c=n+e*8,f=Tt(o);if(!f)return u.err(new y(b.Board));s[i+1]==="~"&&(f.promoted=!0,i++),t.set(c,f),n++}}}return e!==0||n!==8?u.err(new y(b.Board)):u.ok(t)},bt=s=>{if(s.length>64)return u.err(new y(b.Pockets));const t=S.empty();for(const e of s){const n=Tt(e);if(!n)return u.err(new y(b.Pockets));t[n.color][n.role]++}return u.ok(t)},ce=(s,t)=>{let e=r.empty();if(t==="-")return u.ok(e);for(const n of t){const i=n.toLowerCase(),o=n===i?"black":"white",a=o==="white"?0:7;if("a"<=i&&i<="h")e=e.with(et(i.charCodeAt(0)-97,a));else if(i==="k"||i==="q"){const c=s[o].intersect(r.backrank(o)).intersect(s.rook.union(s.king)),f=i==="k"?c.last():c.first();e=e.with(l(f)&&s.rook.has(f)?f:et(i==="k"?7:0,a))}else return u.err(new y(b.Castling))}return v.some(n=>r.backrank(n).intersect(e).size()>2)?u.err(new y(b.Castling)):u.ok(e)},yt=s=>{const t=s.split("+");if(t.length===3&&t[0]===""){const e=G(t[1]),n=G(t[2]);return!l(e)||e>3||!l(n)||n>3?u.err(new y(b.RemainingChecks)):u.ok(new K(3-e,3-n))}else if(t.length===2){const e=G(t[0]),n=G(t[1]);return!l(e)||e>3||!l(n)||n>3?u.err(new y(b.RemainingChecks)):u.ok(new K(e,n))}else return u.err(new y(b.RemainingChecks))},he=s=>{const t=s.split(/[\s_]+/),e=t.shift();let n,i=u.ok(void 0);if(e.endsWith("]")){const c=e.indexOf("[");if(c===-1)return u.err(new y(b.Fen));n=Z(e.slice(0,c)),i=bt(e.slice(c+1,-1))}else{const c=ae(e,"/",7);c===-1?n=Z(e):(n=Z(e.slice(0,c)),i=bt(e.slice(c+1)))}let o;const a=t.shift();if(!l(a)||a==="w")o="white";else if(a==="b")o="black";else return u.err(new y(b.Turn));return n.chain(c=>{const f=t.shift(),h=l(f)?ce(c,f):u.ok(r.empty()),d=t.shift();let g;if(l(d)&&d!=="-"&&(g=Q(d),!l(g)))return u.err(new y(b.EpSquare));let E=t.shift(),k;l(E)&&E.includes("+")&&(k=yt(E),E=t.shift());const R=l(E)?G(E):0;if(!l(R))return u.err(new y(b.Halfmoves));const U=t.shift(),kt=l(U)?G(U):1;if(!l(kt))return u.err(new y(b.Fullmoves));const mt=t.shift();let X=u.ok(void 0);if(l(mt)){if(l(k))return u.err(new y(b.RemainingChecks));X=yt(mt)}else l(k)&&(X=k);return t.length>0?u.err(new y(b.Fen)):i.chain(Vt=>h.chain(_t=>X.map(qt=>({board:c,pockets:Vt,turn:o,castlingRights:_t,remainingChecks:qt,epSquare:g,halfmoves:R,fullmoves:Math.max(1,kt)}))))})},ue=s=>{let t=M(s.role);return s.color==="white"&&(t=t.toUpperCase()),s.promoted&&(t+="~"),t},le=s=>{let t="",e=0;for(let n=7;n>=0;n--)for(let i=0;i<8;i++){const o=i+n*8,a=s.get(o);a?(e>0&&(t+=e,e=0),t+=ue(a)):e++,i===7&&(e>0&&(t+=e,e=0),n!==0&&(t+="/"))}return t},Et=s=>x.map(t=>M(t).repeat(s[t])).join(""),fe=s=>Et(s.white).toUpperCase()+Et(s.black),de=(s,t)=>{let e="";for(const n of v){const i=r.backrank(n);let o=s.kingOf(n);l(o)&&!i.has(o)&&(o=void 0);const a=s.pieces(n,"rook").intersect(i);for(const c of t.intersect(i).reversed())if(c===a.first()&&l(o)&&c<o)e+=n==="white"?"Q":"q";else if(c===a.last()&&l(o)&&o<c)e+=n==="white"?"K":"k";else{const f=H[C(c)];e+=n==="white"?f.toUpperCase():f}}return e||"-"},pe=s=>`${s.white}+${s.black}`,ke=(s,t)=>[le(s.board)+(s.pockets?`[${fe(s.pockets)}]`:""),s.turn[0],de(s.board,s.castlingRights),l(s.epSquare)?D(s.epSquare):"-",...s.remainingChecks?[pe(s.remainingChecks)]:[],...t!=null&&t.epd?[]:[Math.max(0,Math.min(s.halfmoves,9999)),Math.max(1,Math.min(s.fullmoves,9999))]].join(" "),me=(s,t)=>{let e="";if(F(t))t.role!=="pawn"&&(e=M(t.role).toUpperCase()),e+="@"+D(t.to);else{const n=s.board.getRole(t.from);if(!n)return"--";if(n==="king"&&(s.board[s.turn].has(t.to)||Math.abs(t.to-t.from)===2))e=t.to>t.from?"O-O":"O-O-O";else{const i=s.board.occupied.has(t.to)||n==="pawn"&&C(t.from)!==C(t.to);if(n!=="pawn"){e=M(n).toUpperCase();let o;if(n==="king"?o=I(t.to).intersect(s.board.king):n==="queen"?o=lt(t.to,s.board.occupied).intersect(s.board.queen):n==="rook"?o=V(t.to,s.board.occupied).intersect(s.board.rook):n==="bishop"?o=L(t.to,s.board.occupied).intersect(s.board.bishop):o=Y(t.to).intersect(s.board.knight),o=o.intersect(s.board[s.turn]).without(t.from),o.nonEmpty()){const a=s.ctx();for(const c of o)s.dests(c,a).has(t.to)||(o=o.without(c));if(o.nonEmpty()){let c=!1,f=o.intersects(r.fromRank(z(t.from)));o.intersects(r.fromFile(C(t.from)))?c=!0:f=!0,f&&(e+=H[C(t.from)]),c&&(e+=vt[z(t.from)])}}}else i&&(e=H[C(t.from)]);i&&(e+="x"),e+=D(t.to),t.promotion&&(e+="="+M(t.promotion).toUpperCase())}}return e},we=(s,t)=>{var e;const n=me(s,t);return s.play(t),!((e=s.outcome())===null||e===void 0)&&e.winner?n+"#":s.isCheck()?n+"+":n},ge=(s,t)=>{const e=s.ctx(),n=t.match(/^([NBRQK])?([a-h])?([1-8])?[-x]?([a-h][1-8])(?:=?([nbrqkNBRQK]))?[+#]?$/);if(!n){let d;if(t==="O-O"||t==="O-O+"||t==="O-O#"?d="h":(t==="O-O-O"||t==="O-O-O+"||t==="O-O-O#")&&(d="a"),d){const k=s.castles.rook[s.turn][d];return!l(e.king)||!l(k)||!s.dests(e.king,e).has(k)?void 0:{from:e.king,to:k}}const g=t.match(/^([pnbrqkPNBRQK])?@([a-h][1-8])[+#]?$/);if(!g)return;const E={role:g[1]?$(g[1]):"pawn",to:Q(g[2])};return s.isLegal(E,e)?E:void 0}const i=n[1]?$(n[1]):"pawn",o=Q(n[4]),a=n[5]?$(n[5]):void 0;if(!!a!==(i==="pawn"&&r.backranks().has(o))||a==="king"&&s.rules!=="antichess")return;let c=s.board.pieces(s.turn,i);i==="pawn"&&!n[2]?c=c.intersect(r.fromFile(C(o))):n[2]&&(c=c.intersect(r.fromFile(n[2].charCodeAt(0)-97))),n[3]&&(c=c.intersect(r.fromRank(n[3].charCodeAt(0)-49)));const f=i==="pawn"?r.fromFile(C(o)):r.empty();c=c.intersect(f.union(St({color:p(s.turn),role:i},o,s.board.occupied)));let h;for(const d of c)if(s.dests(d,e).has(o)){if(l(h))return;h=d}if(l(h))return{from:h,to:o,promotion:a}};class zt extends P{constructor(){super("crazyhouse")}reset(){super.reset(),this.pockets=S.empty()}setupUnchecked(t){super.setupUnchecked(t),this.board.promoted=t.board.promoted.intersect(t.board.occupied).diff(t.board.king).diff(t.board.pawn),this.pockets=t.pockets?t.pockets.clone():S.empty()}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}validate(){return super.validate().chain(t=>{var e,n;return!((e=this.pockets)===null||e===void 0)&&e.count("king")?u.err(new w(m.Kings)):(((n=this.pockets)===null||n===void 0?void 0:n.size())||0)+this.board.occupied.size()>64?u.err(new w(m.Variant)):u.ok(void 0)})}hasInsufficientMaterial(t){return this.pockets?this.board.occupied.size()+this.pockets.size()<=3&&this.board.pawn.isEmpty()&&this.board.promoted.isEmpty()&&this.board.rooksAndQueens().isEmpty()&&this.pockets.count("pawn")<=0&&this.pockets.count("rook")<=0&&this.pockets.count("queen")<=0:super.hasInsufficientMaterial(t)}dropDests(t){var e,n;const i=this.board.occupied.complement().intersect(!((e=this.pockets)===null||e===void 0)&&e[this.turn].hasNonPawns()?r.full():!((n=this.pockets)===null||n===void 0)&&n[this.turn].hasPawns()?r.backranks().complement():r.empty());if(t=t||this.ctx(),l(t.king)&&t.checkers.nonEmpty()){const o=t.checkers.singleSquare();return l(o)?i.intersect(_(o,t.king)):r.empty()}else return i}}class It extends P{constructor(){super("atomic")}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}validate(){if(this.board.occupied.isEmpty())return u.err(new w(m.Empty));if(this.board.king.size()>2)return u.err(new w(m.Kings));const t=this.board.kingOf(p(this.turn));return l(t)?this.kingAttackers(t,this.turn,this.board.occupied).nonEmpty()?u.err(new w(m.OppositeCheck)):r.backranks().intersects(this.board.pawn)?u.err(new w(m.PawnsOnBackrank)):u.ok(void 0):u.err(new w(m.Kings))}kingAttackers(t,e,n){const i=this.board.pieces(e,"king");return i.isEmpty()||I(t).intersects(i)?r.empty():super.kingAttackers(t,e,n)}playCaptureAt(t,e){super.playCaptureAt(t,e),this.board.take(t);for(const n of I(t).intersect(this.board.occupied).diff(this.board.pawn)){const i=this.board.take(n);(i==null?void 0:i.role)==="rook"&&this.castles.discardRook(n),(i==null?void 0:i.role)==="king"&&this.castles.discardColor(i.color)}}hasInsufficientMaterial(t){if(this.board.pieces(p(t),"king").isEmpty())return!1;if(this.board[t].diff(this.board.king).isEmpty())return!0;if(this.board[p(t)].diff(this.board.king).nonEmpty()){if(this.board.occupied.equals(this.board.bishop.union(this.board.king))){if(!this.board.bishop.intersect(this.board.white).intersects(r.darkSquares()))return!this.board.bishop.intersect(this.board.black).intersects(r.lightSquares());if(!this.board.bishop.intersect(this.board.white).intersects(r.lightSquares()))return!this.board.bishop.intersect(this.board.black).intersects(r.darkSquares())}return!1}return this.board.queen.nonEmpty()||this.board.pawn.nonEmpty()?!1:this.board.knight.union(this.board.bishop).union(this.board.rook).size()===1?!0:this.board.occupied.equals(this.board.knight.union(this.board.king))?this.board.knight.size()<=2:!1}dests(t,e){e=e||this.ctx();let n=r.empty();for(const i of ct(this,t,e)){const o=this.clone();o.play({from:t,to:i});const a=o.board.kingOf(this.turn);l(a)&&(!l(o.board.kingOf(o.turn))||o.kingAttackers(a,o.turn,o.board.occupied).isEmpty())&&(n=n.with(i))}return n}isVariantEnd(){return!!this.variantOutcome()}variantOutcome(t){for(const e of v)if(this.board.pieces(e,"king").isEmpty())return{winner:p(e)}}}class Kt extends P{constructor(){super("antichess")}reset(){super.reset(),this.castles=O.empty()}setupUnchecked(t){super.setupUnchecked(t),this.castles=O.empty()}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}validate(){return this.board.occupied.isEmpty()?u.err(new w(m.Empty)):r.backranks().intersects(this.board.pawn)?u.err(new w(m.PawnsOnBackrank)):u.ok(void 0)}kingAttackers(t,e,n){return r.empty()}ctx(){const t=super.ctx();if(l(this.epSquare)&&q(p(this.turn),this.epSquare).intersects(this.board.pieces(this.turn,"pawn")))return t.mustCapture=!0,t;const e=this.board[p(this.turn)];for(const n of this.board[this.turn])if(ct(this,n,t).intersects(e))return t.mustCapture=!0,t;return t}dests(t,e){e=e||this.ctx();const n=ct(this,t,e),i=this.board[p(this.turn)];return n.intersect(e.mustCapture?l(this.epSquare)&&this.board.getRole(t)==="pawn"?i.with(this.epSquare):i:r.full())}hasInsufficientMaterial(t){if(this.board[t].isEmpty())return!1;if(this.board[p(t)].isEmpty())return!0;if(this.board.occupied.equals(this.board.bishop)){const e=this.board[t].intersects(r.lightSquares()),n=this.board[t].intersects(r.darkSquares()),i=this.board[p(t)].isDisjoint(r.lightSquares()),o=this.board[p(t)].isDisjoint(r.darkSquares());return e&&i||n&&o}return this.board.occupied.equals(this.board.knight)&&this.board.occupied.size()===2?this.board.white.intersects(r.lightSquares())!==this.board.black.intersects(r.darkSquares())!=(this.turn===t):!1}isVariantEnd(){return this.board[this.turn].isEmpty()}variantOutcome(t){if(t=t||this.ctx(),t.variantEnd||this.isStalemate(t))return{winner:this.turn}}}class Ut extends P{constructor(){super("kingofthehill")}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}hasInsufficientMaterial(t){return!1}isVariantEnd(){return this.board.king.intersects(r.center())}variantOutcome(t){for(const e of v)if(this.board.pieces(e,"king").intersects(r.center()))return{winner:e}}}class Gt extends P{constructor(){super("3check")}reset(){super.reset(),this.remainingChecks=K.default()}setupUnchecked(t){var e;super.setupUnchecked(t),this.remainingChecks=((e=t.remainingChecks)===null||e===void 0?void 0:e.clone())||K.default()}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}hasInsufficientMaterial(t){return this.board.pieces(t,"king").equals(this.board[t])}isVariantEnd(){return!!this.remainingChecks&&(this.remainingChecks.white<=0||this.remainingChecks.black<=0)}variantOutcome(t){if(this.remainingChecks){for(const e of v)if(this.remainingChecks[e]<=0)return{winner:e}}}}const be=()=>{const s=B.empty();return s.occupied=new r(65535,0),s.promoted=r.empty(),s.white=new r(61680,0),s.black=new r(3855,0),s.pawn=r.empty(),s.knight=new r(6168,0),s.bishop=new r(9252,0),s.rook=new r(16962,0),s.queen=new r(129,0),s.king=new r(33024,0),s};class Dt extends P{constructor(){super("racingkings")}reset(){this.board=be(),this.pockets=void 0,this.turn="white",this.castles=O.empty(),this.epSquare=void 0,this.remainingChecks=void 0,this.halfmoves=0,this.fullmoves=1}setupUnchecked(t){super.setupUnchecked(t),this.castles=O.empty()}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}validate(){return this.isCheck()||this.board.pawn.nonEmpty()?u.err(new w(m.Variant)):super.validate()}dests(t,e){if(e=e||this.ctx(),t===e.king)return super.dests(t,e);let n=r.empty();for(const i of super.dests(t,e)){const o={from:t,to:i},a=this.clone();a.play(o),a.isCheck()||(n=n.with(i))}return n}hasInsufficientMaterial(t){return!1}isVariantEnd(){const t=r.fromRank(7),e=this.board.king.intersect(t);if(e.isEmpty())return!1;if(this.turn==="white"||e.intersects(this.board.black))return!0;const n=this.board.kingOf("black");if(l(n)){const i=this.board.occupied.without(n);for(const o of I(n).intersect(t).diff(this.board.black))if(this.kingAttackers(o,"white",i).isEmpty())return!1}return!0}variantOutcome(t){if(t?!t.variantEnd:!this.isVariantEnd())return;const e=r.fromRank(7),n=this.board.pieces("black","king").intersects(e),i=this.board.pieces("white","king").intersects(e);return n&&!i?{winner:"black"}:i&&!n?{winner:"white"}:{winner:void 0}}}const ye=()=>{const s=B.empty();return s.occupied=new r(4294967295,4294901862),s.promoted=r.empty(),s.white=new r(4294967295,102),s.black=new r(0,4294901760),s.pawn=new r(4294967295,16711782),s.knight=new r(0,1107296256),s.bishop=new r(0,603979776),s.rook=new r(0,2164260864),s.queen=new r(0,134217728),s.king=new r(0,268435456),s};class Ft extends P{constructor(){super("horde")}reset(){this.board=ye(),this.pockets=void 0,this.turn="white",this.castles=O.default(),this.castles.discardColor("white"),this.epSquare=void 0,this.remainingChecks=void 0,this.halfmoves=0,this.fullmoves=1}static default(){const t=new this;return t.reset(),t}static fromSetup(t){const e=new this;return e.setupUnchecked(t),e.validate().map(n=>e)}clone(){return super.clone()}validate(){if(this.board.occupied.isEmpty())return u.err(new w(m.Empty));if(this.board.king.size()!==1)return u.err(new w(m.Kings));const t=this.board.kingOf(p(this.turn));if(l(t)&&this.kingAttackers(t,this.turn,this.board.occupied).nonEmpty())return u.err(new w(m.OppositeCheck));for(const e of v){const n=this.board.pieces(e,"king").isEmpty()?r.backrank(p(e)):r.backranks();if(this.board.pieces(e,"pawn").intersects(n))return u.err(new w(m.PawnsOnBackrank))}return u.ok(void 0)}hasInsufficientMaterial(t){if(this.board.pieces(t,"king").nonEmpty())return!1;const e=k=>k==="light"?"dark":"light",n=k=>k==="light"?r.lightSquares():r.darkSquares(),i=k=>{const R=this.board.pieces(k,"bishop");return R.intersects(r.darkSquares())&&R.intersects(r.lightSquares())},o=A.fromBoard(this.board,t),a=k=>n(k).intersect(this.board.pieces(t,"bishop")).size(),c=a("light")>=1?"light":"dark",f=o.pawn+o.knight+o.rook+o.queen+Math.min(a("dark"),2)+Math.min(a("light"),2),h=A.fromBoard(this.board,p(t)),d=k=>n(k).intersect(this.board.pieces(p(t),"bishop")).size(),g=h.size(),E=k=>g-k;if(f===0)return!0;if(f>=4||(o.pawn>=1||o.queen>=1)&&f>=2||o.rook>=1&&f>=2&&!(f===2&&o.rook===1&&o.bishop===1&&E(d(c))===1))return!1;if(f===1){if(g===1)return!0;if(o.queen===1)return!(h.pawn>=1||h.rook>=1||d("light")>=2||d("dark")>=2);if(o.pawn===1){const k=this.board.pieces(t,"pawn").last(),R=this.clone();R.board.set(k,{color:t,role:"queen"});const U=this.clone();return U.board.set(k,{color:t,role:"knight"}),R.hasInsufficientMaterial(t)&&U.hasInsufficientMaterial(t)}else{if(o.rook===1)return!(h.pawn>=2||h.rook>=1&&h.pawn>=1||h.rook>=1&&h.knight>=1||h.pawn>=1&&h.knight>=1);if(o.bishop===1)return!(d(e(c))>=2||d(e(c))>=1&&h.pawn>=1||h.pawn>=2);if(o.knight===1)return!(g>=4&&(h.knight>=2||h.pawn>=2||h.rook>=1&&h.knight>=1||h.rook>=1&&h.bishop>=1||h.knight>=1&&h.bishop>=1||h.rook>=1&&h.pawn>=1||h.knight>=1&&h.pawn>=1||h.bishop>=1&&h.pawn>=1||i(p(t))&&h.pawn>=1)&&(d("dark")<2||E(d("dark"))>=3)&&(d("light")<2||E(d("light"))>=3))}}else{if(f===2)return g===1?!0:o.knight===2?h.pawn+h.bishop+h.knight<1:i(t)?!(h.pawn>=1||h.bishop>=1||h.knight>=1&&h.rook+h.queen>=1):o.bishop>=1&&o.knight>=1?!(h.pawn>=1||d(e(c))>=1||E(d(c))>=3):!(h.pawn>=1&&d(e(c))>=1||h.pawn>=1&&h.knight>=1||d(e(c))>=1&&h.knight>=1||d(e(c))>=2||h.knight>=2||h.pawn>=2);if(f===3)return o.knight===2&&o.bishop===1||o.knight===3||i(t)?!1:g===1}return!0}isVariantEnd(){return this.board.white.isEmpty()||this.board.black.isEmpty()}variantOutcome(t){if(this.board.white.isEmpty())return{winner:"black"};if(this.board.black.isEmpty())return{winner:"white"}}}const Ee=s=>{switch(s){case"chess":return Pt.default();case"antichess":return Kt.default();case"atomic":return It.default();case"horde":return Ft.default();case"racingkings":return Dt.default();case"kingofthehill":return Ut.default();case"3check":return Gt.default();case"crazyhouse":return zt.default()}},Ce=(s,t)=>{switch(s){case"chess":return Pt.fromSetup(t);case"antichess":return Kt.fromSetup(t);case"atomic":return It.fromSetup(t);case"horde":return Ft.fromSetup(t);case"racingkings":return Dt.fromSetup(t);case"kingofthehill":return Ut.fromSetup(t);case"3check":return Gt.fromSetup(t);case"crazyhouse":return zt.fromSetup(t)}},Re=(s=dt)=>({headers:s(),moves:new ft});class ft{constructor(){this.children=[]}*mainlineNodes(){let t=this;for(;t.children.length;){const e=t.children[0];yield e,t=e}}*mainline(){for(const t of this.mainlineNodes())yield t.data}end(){let t=this;for(;t.children.length;)t=t.children[0];return t}}class Lt extends ft{constructor(t){super(),this.data=t}}const Ae=(s,t,e)=>{const n=new ft,i=[{before:s,after:n,ctx:t}];let o;for(;o=i.pop();)for(let a=0;a<o.before.children.length;a++){const c=a<o.before.children.length-1?o.ctx.clone():o.ctx,f=o.before.children[a],h=e(c,f.data,a);if(l(h)){const d=new Lt(h);o.after.children.push(d),i.push({before:f,after:d,ctx:c})}}return n},dt=()=>new Map([["Event","?"],["Site","?"],["Date","????.??.??"],["Round","?"],["White","?"],["Black","?"],["Result","*"]]),Ct="\uFEFF",J=s=>/^\s*$/.test(s),tt=s=>s.startsWith("%");class Oe extends Error{}class xe{constructor(t,e=dt,n=1e6){this.emitGame=t,this.initHeaders=e,this.maxBudget=n,this.lineBuf=[],this.resetGame(),this.state=0}resetGame(){this.budget=this.maxBudget,this.found=!1,this.state=1,this.game=Re(this.initHeaders),this.stack=[{parent:this.game.moves,root:!0}],this.commentBuf=[]}consumeBudget(t){if(this.budget-=t,this.budget<0)throw new Oe("ERR_PGN_BUDGET")}parse(t,e){if(!(this.budget<0))try{let n=0;for(;;){const i=t.indexOf(`
`,n);if(i===-1)break;const o=i>n&&t[i-1]==="\r"?i-1:i;this.consumeBudget(i-n),this.lineBuf.push(t.slice(n,o)),n=i+1,this.handleLine()}this.consumeBudget(t.length-n),this.lineBuf.push(t.slice(n)),e!=null&&e.stream||(this.handleLine(),this.emit(void 0))}catch(n){this.emit(n)}}handleLine(){let t=!0,e=this.lineBuf.join("");this.lineBuf=[];t:for(;;)switch(this.state){case 0:e.startsWith(Ct)&&(e=e.slice(Ct.length)),this.state=1;case 1:if(J(e)||tt(e))return;this.found=!0,this.state=2;case 2:{if(tt(e))return;let n=!0;for(;n;)n=!1,e=e.replace(/^\s*\[([A-Za-z0-9][A-Za-z0-9_+#=:-]*)\s+"((?:[^"\\]|\\"|\\\\)*)"\]/,(i,o,a)=>(this.consumeBudget(200),this.game.headers.set(o,a.replace(/\\"/g,'"').replace(/\\\\/g,"\\")),n=!0,t=!1,""));if(J(e))return;this.state=3}case 3:{if(t){if(tt(e))return;if(J(e))return this.emit(void 0)}const n=/(?:[NBKRQ]?[a-h]?[1-8]?[-x]?[a-h][1-8](?:=?[nbrqkNBRQK])?|[pnbrqkPNBRQK]?@[a-h][1-8]|O-O-O|0-0-0|O-O|0-0)[+#]?|--|Z0|0000|@@@@|{|;|\$\d{1,4}|[?!]{1,2}|\(|\)|\*|1-0|0-1|1\/2-1\/2/g;let i;for(;i=n.exec(e);){const o=this.stack[this.stack.length-1];let a=i[0];if(a===";")return;if(a.startsWith("$"))this.handleNag(parseInt(a.slice(1),10));else if(a==="!")this.handleNag(1);else if(a==="?")this.handleNag(2);else if(a==="!!")this.handleNag(3);else if(a==="??")this.handleNag(4);else if(a==="!?")this.handleNag(5);else if(a==="?!")this.handleNag(6);else if(a==="1-0"||a==="0-1"||a==="1/2-1/2"||a==="*")this.stack.length===1&&a!=="*"&&this.game.headers.set("Result",a);else if(a==="(")this.consumeBudget(100),this.stack.push({parent:o.parent,root:!1});else if(a===")")this.stack.length>1&&this.stack.pop();else if(a==="{"){const c=n.lastIndex,f=e[c]===" "?c+1:c;e=e.slice(f),this.state=4;continue t}else this.consumeBudget(100),a==="Z0"||a==="0000"||a==="@@@@"?a="--":a.startsWith("0")&&(a=a.replace(/0/g,"O")),o.node&&(o.parent=o.node),o.node=new Lt({san:a,startingComments:o.startingComments}),o.startingComments=void 0,o.root=!1,o.parent.children.push(o.node)}return}case 4:{const n=e.indexOf("}");if(n===-1){this.commentBuf.push(e);return}else{const i=n>0&&e[n-1]===" "?n-1:n;this.commentBuf.push(e.slice(0,i)),this.handleComment(),e=e.slice(n),this.state=3,t=!1}}}}handleNag(t){var e;this.consumeBudget(50);const n=this.stack[this.stack.length-1];n.node&&((e=n.node.data).nags||(e.nags=[]),n.node.data.nags.push(t))}handleComment(){var t,e;this.consumeBudget(100);const n=this.stack[this.stack.length-1],i=this.commentBuf.join(`
`);this.commentBuf=[],n.node?((t=n.node.data).comments||(t.comments=[]),n.node.data.comments.push(i)):n.root?((e=this.game).comments||(e.comments=[]),this.game.comments.push(i)):(n.startingComments||(n.startingComments=[]),n.startingComments.push(i))}emit(t){if(this.state===4&&this.handleComment(),t)return this.emitGame(this.game,t);this.found&&this.emitGame(this.game,void 0),this.resetGame()}}const Ye=(s,t=dt)=>{const e=[];return new xe(n=>e.push(n),t,NaN).parse(s),e},ve=s=>{switch((s||"chess").toLowerCase()){case"chess":case"chess960":case"chess 960":case"standard":case"from position":case"classical":case"normal":case"fischerandom":case"fischerrandom":case"fischer random":case"wild/0":case"wild/1":case"wild/2":case"wild/3":case"wild/4":case"wild/5":case"wild/6":case"wild/7":case"wild/8":case"wild/8a":return"chess";case"crazyhouse":case"crazy house":case"house":case"zh":return"crazyhouse";case"king of the hill":case"koth":case"kingofthehill":return"kingofthehill";case"three-check":case"three check":case"threecheck":case"three check chess":case"3-check":case"3 check":case"3check":return"3check";case"antichess":case"anti chess":case"anti":return"antichess";case"atomic":case"atom":case"atomic chess":return"atomic";case"horde":case"horde chess":return"horde";case"racing kings":case"racingkings":case"racing":case"race":return"racingkings";default:return}},Xe=s=>{const t=ve(s.get("Variant"));if(!t)return u.err(new w(m.Variant));const e=s.get("FEN");return e?he(e).chain(n=>Ce(t,n)):u.ok(Ee(t))};function Se(s){switch(s){case"G":return"green";case"R":return"red";case"Y":return"yellow";case"B":return"blue";default:return}}const Be=s=>{const t=Se(s.slice(0,1)),e=Q(s.slice(1,3)),n=Q(s.slice(3,5));if(!(!t||!l(e))){if(s.length===3)return{color:t,from:e,to:e};if(s.length===5&&l(n))return{color:t,from:e,to:n}}},Ne=s=>{let t,e,n;const i=[];return{text:s.replace(/\s?\[%(emt|clk)\s(\d{1,5}):(\d{1,2}):(\d{1,2}(?:\.\d{0,3})?)\]\s?/g,(a,c,f,h,d)=>{const g=parseInt(f,10)*3600+parseInt(h,10)*60+parseFloat(d);return c==="emt"?t=g:c==="clk"&&(e=g),"  "}).replace(/\s?\[%(?:csl|cal)\s([RGYB][a-h][1-8](?:[a-h][1-8])?(?:,[RGYB][a-h][1-8](?:[a-h][1-8])?)*)\]\s?/g,(a,c)=>{for(const f of c.split(","))i.push(Be(f));return"  "}).replace(/\s?\[%eval\s(?:#([+-]?\d{1,5})|([+-]?(?:\d{1,5}|\d{0,5}\.\d{1,2})))(?:,(\d{1,5}))?\]\s?/g,(a,c,f,h)=>{const d=h&&parseInt(h,10);return n=c?{mate:parseInt(c,10),depth:d}:{pawns:parseFloat(f),depth:d},"  "}).trim(),shapes:i,emt:t,clock:e,evaluation:n}};class T{constructor(t){this.path=t,this.size=()=>this.path.length/2,this.head=()=>this.path.slice(0,2),this.tail=()=>new T(this.path.slice(2)),this.init=()=>new T(this.path.slice(0,-2)),this.last=()=>this.path.slice(-2),this.empty=()=>this.path=="",this.contains=e=>this.path.startsWith(e.path),this.isChildOf=e=>this.init()===e,this.append=e=>new T(this.path+e),this.equals=e=>this.path==e.path}}T.root=new T("");const Rt=s=>{const t=s.map(Ne),e=n=>n.reduce((i,o)=>typeof o>"u"?i:o,void 0);return{texts:t.map(n=>n.text).filter(n=>!!n),shapes:t.flatMap(n=>n.shapes),clock:e(t.map(n=>n.clock)),emt:e(t.map(n=>n.emt))}};function Ze(s,t){var e;const n=s.get("source")||s.get("site"),i=s.get("result"),o=(e=s.get("timecontrol"))===null||e===void 0?void 0:e.split("+").map(f=>parseInt(f)),a=o&&o[0]?{initial:o[0],increment:o[1]||0}:void 0,c=s.get("orientation");return{externalLink:n&&n.match(/^https?:\/\//)?n:void 0,isLichess:!!(t&&(n!=null&&n.startsWith(t))),timeControl:a,orientation:c==="white"||c==="black"?c:void 0,result:i}}class pt{constructor(t,e,n){this.pos=t,this.path=e,this.clocks=n,this.clone=()=>new pt(this.pos.clone(),this.path,{...this.clocks})}}const Pe=(s,t,e)=>t=="white"?{...s,black:e}:{...s,white:e},Je=(s,t,e)=>Ae(t,new pt(s,T.root,{}),(n,i)=>{const o=ge(n.pos,i.san);if(!o)return;const a=oe(o),c=n.path.append(a),f=we(n.pos,o);n.path=c;const h=n.pos.toSetup(),d=Rt(i.comments||[]),g=Rt(i.startingComments||[]),E=[...d.shapes,...g.shapes],k=(h.fullmoves-1)*2+(n.pos.turn==="white"?0:1);let R=n.clocks=Pe(n.clocks,n.pos.turn,d.clock);return k<2&&e.timeControl&&(R={white:e.timeControl.initial,black:e.timeControl.initial,...R}),{path:c,ply:k,id:a,move:o,san:f,uci:Ht(o),fen:ke(n.pos.toSetup()),turn:n.pos.turn,check:n.pos.isCheck(),comments:d.texts,startingComments:g.texts,nags:i.nags||[],shapes:E,clocks:R,emt:d.emt}});export{he as A,Je as a,Ke as b,ze as c,je as d,Fe as e,Qt as f,Ot as g,Le as h,Te as i,$e as j,xt as k,He as l,Ze as m,Qe as n,De as o,Ye as p,Ve as q,Ge as r,Xe as s,_e as t,Ie as u,Me as v,We as w,At as x,qe as y,Ue as z};
